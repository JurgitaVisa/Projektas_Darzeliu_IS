{"version":3,"sources":["reportWebVitals.js","components/10Services/httpService.js","components/01Login/LoginForm.jsx","components/01Login/LoginContainer.jsx","components/10Services/endpoint.js","components/00Navigation/Logout.jsx","components/00Navigation/LogoutContainer.jsx","components/00Navigation/NavBar.jsx","components/02Main/MainContainer.jsx","components/03NotFound/NotFound.jsx","components/04Admin/AdminContainer.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","axios","interceptors","response","use","error","status","console","log","alert","Promise","reject","get","post","put","delete","LoginForm","username","password","loginError","onPassChange","onUsernameChange","onSubmit","className","htmlFor","type","id","value","onChange","role","defaults","withCredentials","LoginContainer","props","handleUsernameChange","event","setState","target","handlePassChange","handleSubmit","userData","URLSearchParams","append","state","http","process","headers","resp","data","history","push","catch","preventDefault","this","Component","Logout","onLogout","onClick","LogoutContainer","useHistory","e","Navigation","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","MainContainer","NavBar","NotFound","location","useLocation","pathname","AdminContainer","App","exact","path","component","Login","Main","Admin","document","title","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.021e359c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport axios from 'axios';\r\n// import { toast } from 'react-toastify';\r\n\r\n//default response when an unexpected error occurs\r\n//hadle expected client errors separately\r\naxios.interceptors.response.use(null, error => {\r\n    const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\r\n\r\n    if (!expectedError) {\r\n        console.log(\"Logging unexpected error\", error);\r\n        alert('Įvyko klaida, puslapis nurodytu adresu nepasiekiamas');\r\n    }\r\n\r\n    return Promise.reject(error);\r\n});\r\n\r\n//http service object with crud methods (current axios)\r\nexport default {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete\r\n};\r\n","import React from 'react';\r\n\r\nconst LoginForm = (({ username, password, loginError, onPassChange, onUsernameChange, onSubmit }) => {\r\n\r\n    return (\r\n\r\n        <div className=\"row d-flex justify-content-center\">\r\n\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">\r\n                        Naudotojo vardas\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"username\"\r\n                        value={username}\r\n                        onChange={onUsernameChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">\r\n                        Slaptažodis\r\n                    </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={onPassChange}\r\n                    />\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">Prisijungti</button>\r\n\r\n                {/* <input className=\"form-control\" type=\"text\" value={username} onChange={onUsernameChange} />\r\n                <input type=\"password\" value={password} onChange={onPassChange} />\r\n                <input type=\"submit\" /> */}\r\n\r\n            </form>\r\n\r\n            {loginError && <div className=\"alert alert-danger\" role=\"alert\">\r\n                Neteisingi prisijungimo duomenys!\r\n            </div>\r\n            }\r\n        </div>\r\n\r\n\r\n    );\r\n});\r\n\r\nexport default LoginForm;","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport http from '../10Services/httpService';\r\nimport apiEndpoint from '../10Services/endpoint';\r\nimport LoginForm from './LoginForm';\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nexport class LoginContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            loginError: false\r\n        };\r\n    }\r\n\r\n    handleUsernameChange = (event) => {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    handlePassChange = (event) => {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        let userData = new URLSearchParams();\r\n        userData.append('username'\r\n            , this.state.username);\r\n        userData.append('password'\r\n            , this.state.password);\r\n        http.post(`${apiEndpoint}/login`\r\n            , userData,\r\n            { headers: { 'Content-type': 'application/x-www-form-urlencoded' } })\r\n            .then((resp) => {\r\n                console.log(\"user \" + resp.data.username + \" logged in\");\r\n                this.props.history.push(\"/home\");\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error log from Login submit\", error);\r\n                if (error.response.status === 401) {\r\n                    this.setState({ loginError: true });\r\n                }\r\n            });\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <div className=\"text-center\">\r\n                    <h5>Sveiki atvykę! </h5>\r\n                    <p>Login iš Andriaus skaidrių:</p>\r\n\r\n                </div>\r\n\r\n                <LoginForm\r\n                    username={this.state.username}\r\n                    password={this.state.password}\r\n                    loginError={this.state.loginError}\r\n                    onUsernameChange={this.handleUsernameChange}\r\n                    onPassChange={this.handlePassChange}\r\n                    onSubmit={this.handleSubmit}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginContainer\r\n\r\n","const apiEndpoint = process.env.PUBLIC_URL;\r\n\r\n//const apiEndpoint = \"http://localhost:8080\";\r\n\r\nexport default apiEndpoint;","import React from 'react'\r\n\r\n\r\nexport default function Logout({onLogout}) {\r\n    return (\r\n        <div>\r\n             <button onClick={onLogout} className=\"btn btn-outline-primary m-1\" >Atsijungti</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport http from '../10Services/httpService';\r\nimport apiEndpoint from '../10Services/endpoint';\r\n\r\nimport Logout from './Logout';\r\n\r\nexport default function LogoutContainer() {\r\n\r\n    const history = useHistory();\r\n\r\n    const handleLogout = e => {\r\n        http\r\n      .post(`${apiEndpoint}/logout`)\r\n      .then(response => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error on logout\", error);\r\n      });        \r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Logout onLogout={handleLogout} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport LogoutContainer from './LogoutContainer'\r\n\r\nfunction Navigation() {\r\n\r\n    return (\r\n        <div className=\"pt-3\">\r\n            <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\r\n                <NavLink className=\"navbar-brand\" to={\"/home\"}>Logo(home)</NavLink>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        \r\n                        <li className=\"nav-item p-1\">\r\n                            <NavLink className=\"nav-link\" to={\"/admin\"}>Naudotojų administravimas</NavLink>\r\n                        </li>                        \r\n                        \r\n\r\n                        <LogoutContainer/>\r\n\r\n                    </ul>\r\n\r\n                </div>\r\n            </nav>\r\n        </div >\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\n\r\nimport NavBar from '../00Navigation/NavBar'\r\n\r\nclass MainContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBar/>\r\n                <h5>Sveiki prisijungę prie darželių IS</h5>\r\n                <p>Atsisiųsti naudotojo instrukciją</p>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainContainer\r\n","import React from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div>\r\n            <p className=\"ml-2\">Puslapis adresu: {location.pathname} nerastas</p>\r\n            <Link to=\"/home\" className=\"btn btn-primary ml-2\">Pradinis</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\r\n\r\nimport http from '../10Services/httpService';\r\nimport apiEndpoint from '../10Services/endpoint';\r\n\r\nimport NavBar from '../00Navigation/NavBar';\r\n\r\n\r\nexport class AdminContainer extends Component {\r\n\r\n//pvz:\r\n\r\n// constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//         data: null\r\n//     }\r\n// }\r\n    // componentDidMount() {\r\n    //     const currentId = this.props.match.params.id;\r\n    //     this.setState({ currentId: currentId });\r\n\r\n    //     if (currentId === \"new\") return;\r\n\r\n    //     http.get(`${apiEndpoint}/api/congratulations/${currentId}`)\r\n    //         .then((response) => {\r\n    //             this.setState({ data: response.data });\r\n    //          }).catch(error => {\r\n    //             if(error.response && response.status === 404) alert(\"Kažkoks pranešimo tekstas susijęs su klaida; su get nelabai įmanoma tokia klaida\")\r\n    //\r\n    //             return this.props.history.replace(\"/\");\r\n    //         });\r\n\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBar/>\r\n                <h5>Administratoriaus langas (čia bus naudotojų sąrašas ir naujo naudotojo įvedimo mygtukas)</h5>\r\n                <p>Servisus siūlau kviesti per \"httpService\" ir \"apiEndpoint\" (užkomentuotas pavyzdys įdėtas Admin komponente), kad galėtume bet kada pakeisti axios arba url adresą, jei reiks. </p>\r\n                <p>Pavadinimai gali būti keičiami, kad visiems būtų aiškūs. Aš juos iš Mosh tutorial paėmiau, kai mokiausi; \r\n                vėliau adresus reiks sutvarkyti ir papildyti. </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminContainer\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport './index.css';\nimport './App.css';\n\nimport Login  from './components/01Login/LoginContainer';\nimport Main from './components/02Main/MainContainer';\nimport NotFound from './components/03NotFound/NotFound';\nimport Admin from './components/04Admin/AdminContainer';\n\n\nfunction App() {\n  return (\n    <div className=\"container pt-5\">       \n        <Switch >\n          <Route exact path=\"/\" component={Login} />   \n          <Route path=\"/home\" component={Main} />      \n          <Route path=\"/admin\" component={Admin} />\n          \n          <Route path='*' component={NotFound} />\n          <Route component={NotFound} />\n\n        </Switch>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\nimport './index.css';\nimport App from './App';\n\n\n\ndocument.title = \"Never Latte\";\n\n\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n\n      <App />\n\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}